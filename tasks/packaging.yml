# vim:ft=ansible:
---
# Reflector ranks mirrors
- name: Packaging | Install reflector
  package:
    name: reflector
    state: present
  become: true

- name: Packaging | Install reflector service
  copy:
    src: files/reflector.service
    dest: /etc/systemd/system/reflector.service
  become: true

- name: Packaging | Install reflector timer
  copy:
    src: files/reflector.timer
    dest: /etc/systemd/system/reflector.timer
  become: true

- name: Packaging | Enable reflector service
  service:
    name: reflector.service
    enabled: yes
    state: started
  become: true

- name: Packaging | Enable reflector timer
  service:
    name: reflector.timer
    enabled: yes
    state: started
  become: true

- name: Packaging | Update official packages
  pacman:
    update_cache: yes
    upgrade: yes
  become: true

- name: Packaging | Install packages necessary for AUR installs
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - base-devel
    - ccache
    - curl
    - gnupg
    - lzop

- name: Packaging | Install makepkg.conf
  become: true
  template:
    src: templates/makepkg.conf.j2
    dest: /etc/makepkg.conf

- name: Packaging | Create GPG config dir
  file:
    path: "/home/{{ user.name }}/.gnupg"
    owner: "{{ user.name }}"
    state: directory

- name: Packaging | Configure GPG for PKGBUILD included keys
  copy:
    dest: "/home/{{ user.name }}/.gnupg/gpg.conf"
    src: files/gpg.conf
    owner: "{{ user.name }}"

- name: Packaging | Install pacaur-install script
  copy:
    dest: /usr/local/bin/install-pacaur
    src: install-pacaur
    mode: a+x
  become: true

- name: Packaging | Check pacaur installed
  shell: command -v pacaur >/dev/null
  register: check_pacaur_installed
  ignore_errors: true
  changed_when: false

- name: Packaging | Install pacaur
  command: /usr/local/bin/install-pacaur
  when: check_pacaur_installed | failed

- name: Packaging | Update pacaur packages
  pacaur:
    update_cache: yes
    upgrade: yes
